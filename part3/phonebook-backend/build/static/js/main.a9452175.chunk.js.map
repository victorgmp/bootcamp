{"version":3,"sources":["services/persons/index.js","components/Filter/index.js","components/PersonForm/index.js","components/Persons/index.js","components/Notification/index.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","updatedObject","put","delete","Filter","filter","onChange","name","value","PersonForm","values","handleChange","handleSubmit","onSubmit","number","type","Persons","persons","handleDelete","map","person","onClick","Notification","message","className","content","App","useState","setPersons","setValues","setFilter","setMessage","useEffect","personService","personsList","catch","error","console","log","personsToShow","toLowerCase","indexOf","handleMessage","window","confirm","e","target","preventDefault","newPerson","find","previousPerson","n","returnedPerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9452175.chunk.js","sourcesContent":["import axios from 'axios'\n// const baseUrl = 'http://localhost:3001/api/persons'\n// const baseUrl = 'https://agile-shore-54845.herokuapp.com/api/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, updatedObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, updatedObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }\n","import React from 'react'\n\nconst Filter = ({ filter, onChange }) => (\n  <div>\n    filter shown with: \n  <input\n      name=\"filter\"\n      value={filter}\n      onChange={onChange}\n    />\n  </div>\n)\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({ values, handleChange, handleSubmit }) => (\n  <form onSubmit={handleSubmit}>\n    <div>\n      name: <input name=\"name\" value={values.name} onChange={handleChange} />\n    </div>\n    <div>\n      number: <input name=\"number\" value={values.number} onChange={handleChange} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nexport default PersonForm\n","import React from 'react'\n\nconst Persons = ({ persons, handleDelete }) => (\n  <ul>\n    {persons.map(person =>\n      <li key={person.id}>\n        {person.name}: {person.number}\n        <button onClick={() => handleDelete(person.id, person.name)}>delete</button>\n      </li>\n    )}\n  </ul>\n)\n\nexport default Persons\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  \n  return (\n    <div className={message.type === 'error' ? 'error' : 'success'}>\n      {message.content}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\n\nimport personService from './services/persons'\n\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const initialValues = {\n    name: '',\n    number: ''\n  }\n\n  const [persons, setPersons] = useState([])\n  const [values, setValues] = useState(initialValues)\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(personsList => {\n        setPersons(personsList)\n      }).catch(error => {\n        console.log('error trying to get users', error)\n      })\n  }, [])\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    })\n  }\n\n  const personsToShow = persons.filter(person =>\n    person.name.toLowerCase().indexOf(filter.toLowerCase()) > -1\n  );\n\n  const handleMessage = (message) => {\n    return window.confirm(message)\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const newPerson = {\n      name: values.name,\n      number: values.number\n    }\n    const nameExist = persons.find(person => person.name === values.name)\n\n    if (nameExist) {\n      const message = `${values.name} is already added to phonebook, replace the old number with a new one?`\n      const result = handleMessage(message)\n\n      if (result) {\n        const previousPerson = persons.find(n => n.name === values.name);\n\n        personService\n          .update(previousPerson.id, newPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person =>\n              person.id !== previousPerson.id ?  person : returnedPerson\n            ))\n\n            setMessage({\n              content: `Updated ${values.name}`,\n              type: 'success'\n            })\n          }).catch(error => {\n            console.log('error trying to update user', error)\n            setMessage({\n              content: `Information of ${values.name} has already been removed from server`,\n              type: 'error'\n            })\n          })\n      }\n    } else {\n\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons([\n            ...persons,\n            returnedPerson\n          ])\n\n          setMessage({\n            content: `Added ${values.name}`,\n            type: 'success'\n          })\n        }).catch(error => {\n          console.log('error trying to create user', error)\n        })\n    }\n  }\n  \n  const handleDelete = (id, name) => {\n    // console.log('id', id)\n    const message = `do you really want to eliminate ${name}?`\n    const result = handleMessage(message)\n\n    if (result) {\n      personService\n        .remove(id)\n        .then(returnedPerson => {\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n      <Notification message={message} />\n\n      <Filter filter={filter} onChange={(e) => setFilter(e.target.value)} />\n\n      <h2>Add a new</h2>\n      <PersonForm\n        values={values}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      />\n\n      <h2>Numbers</h2>\n      <Persons\n        persons={personsToShow}\n        handleDelete={(id, name) => handleDelete(id, name)}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}